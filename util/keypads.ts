type KeyType = Record<
  string,
  { shift?: string; value?: string; alpha?: string }
>;

export const keys: KeyType = {
  "1": { value: "1", shift: "\\times 10^{-15}" },
  "2": { value: "2", shift: "\\times 10^{-12}" },
  "3": { value: "3", shift: "\\times 10^{-9}" },
  "4": { value: "4", shift: "\\times 10^{-6}" },
  "5": { value: "5", shift: "\\times 10^{-3}" },
  "6": { value: "6", shift: "\\times 10^3" },
  "7": { value: "7", shift: "\\times 10^6" },
  "8": { value: "8", shift: "\\times 10^9" },
  "9": { value: "9", shift: "\\times 10^{12}" },
  "÷": { value: "\\div", shift: "C" },
  "×": { value: "\\times", shift: "P" },
  "-": { value: "-", shift: "Rec()" },
  "0": { value: "0" },
  "•": { value: "." },
  "(": { value: "(", shift: "[" },
  ")": { value: ")", shift: "]", alpha: "X" },
  ",": { value: ",", alpha: "Y" },
  "√": { value: "\\sqrt{}", shift: "\\nthroot3{}" },
  xⁿ: { value: "^{}", shift: "\\nthroot{}{}" },
  "x²": { value: "^2", shift: "^3" },
  "+": { value: "+", shift: "Pol()" },
  "x¯¹": { value: "^{-1}", shift: "!" },
  sin: { value: "\\sin()", shift: "\\sin^{-1}()", alpha: "D" },
  cos: { value: "\\cos()", shift: "\\cos^{-1}()", alpha: "E" },
  tan: { value: "\\tan()", shift: "\\tan^{-1}()", alpha: "F" },
  log: { value: "\\log()", shift: "10^{}" },
  ln: { value: "\\ln()", shift: "e^{}" },
  AC: { value: "AC" },
  DEL: { value: "DEL" },
  "=": { value: "=" },
  EXP: { value: "\\times 10^{}", shift: "\\pi" },
  ENG: { value: "ENG", shift: "i" },
  Ans: { value: "Ans" },
  "a b/c": { value: "\\frac{}{}" },
  "◀": { value: "◀" },
  "▶": { value: "▶" },
  "∫dx": { value: "\\int_{}^{}d" },
  RCL: { value: "RCL", shift: "STO" },
  "M+": { value: "M+", shift: "M-", alpha: "M" },
  CONS: { value: "CONS" },
};
